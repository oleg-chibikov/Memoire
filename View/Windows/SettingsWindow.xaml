<customWindow:AnimatedWindow
    x:Class="Mémoire.View.Windows.SettingsWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:commonConverters="clr-namespace:Scar.Common.WPF.Converters;assembly=Scar.Common.WPF.Converters"
    xmlns:commonView="clr-namespace:Scar.Common.WPF.View.Core;assembly=Scar.Common.WPF.View.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:lex="http://wpflocalizeextension.codeplex.com"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:numericUpDown="clr-namespace:Scar.Common.WPF.Controls;assembly=Scar.Common.WPF.Controls.NumericUpDown"
    xmlns:viewModel="clr-namespace:Mémoire.ViewModel;assembly=Mémoire.ViewModel"
    xmlns:customWindow="clr-namespace:Scar.Common.WPF.View.CustomWindow;assembly=Scar.Common.WPF.View.CustomWindow"
    xmlns:settings="clr-namespace:Mémoire.View.Controls.Settings;assembly=Mémoire.View.Controls.Settings"
    xmlns:dialogs="clr-namespace:Mémoire.View.Dialogs;assembly=Mémoire.View.Controls.Dialogs"
    Width="700"
    d:DataContext="{d:DesignInstance d:Type=viewModel:SettingsViewModel}"
    lex:LocalizeDictionary.DesignCulture="en"
    lex:LocalizeDictionary.OutputMissingKeys="True"
    lex:ResxLocalizationProvider.DefaultAssembly="Mémoire.Resources"
    lex:ResxLocalizationProvider.DefaultDictionary="Texts"
    Background="{StaticResource DarkerBackground}"
    Icon="pack://application:,,/Mémoire.View;component/Images/IconAlt.ico"
    SizeToContent="Height"
    mc:Ignorable="d">
    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Closing">
            <b:InvokeCommandAction Command="{Binding WindowClosingCommand, Mode=OneTime}" />
        </b:EventTrigger>
    </b:Interaction.Triggers>
    <customWindow:AnimatedWindow.Resources>
        <ResourceDictionary Source="pack://application:,,,/Scar.Common.WPF.Controls.Styles;component/Slider.xaml" />
    </customWindow:AnimatedWindow.Resources>
    <customWindow:AnimatedWindow.TaskbarItemInfo>
        <TaskbarItemInfo
            Description="{Binding ProgressDescription, Mode=OneWay}"
            ProgressState="{Binding ProgressState, Mode=OneWay, Converter={StaticResource ProgressStateConverter}}"
            ProgressValue="{Binding Progress, Mode=OneWay, Converter={StaticResource PercentageIntToDoubleConverter}}" />
    </customWindow:AnimatedWindow.TaskbarItemInfo>
    <materialDesign:DialogHost IsOpen="{Binding ProcessBlacklistViewModel.IsActiveProcessesDialogOpen, Mode=OneWay}">
        <materialDesign:DialogHost.DialogContent>
            <dialogs:ActiveProcessesDialog DataContext="{Binding ProcessBlacklistViewModel, Mode=OneTime}" />
        </materialDesign:DialogHost.DialogContent>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid
                Grid.Row="0"
                commonView:MarginSetter.Margin="{StaticResource CommonMargin}"
                commonView:MarginSetter.Orientation="Vertical">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="220" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Row="0"
                    Grid.Column="0"
                    Text="{lex:Loc UiLanguage}" />
                <DockPanel Grid.Row="0" Grid.Column="1">
                    <ComboBox
                        DisplayMemberPath="DisplayName"
                        IsSynchronizedWithCurrentItem="True"
                        ItemsSource="{Binding AvailableUiLanguages, Mode=OneTime}"
                        SelectedValue="{Binding UiLanguage, Mode=TwoWay}"
                        SelectedValuePath="Code" />
                    <StackPanel
                        HorizontalAlignment="Right"
                        commonView:MarginSetter.Margin="{StaticResource CommonMargin}"
                        Orientation="Horizontal">
                        <Button
                            Command="{Binding ViewLogsCommand, Mode=OneTime}"
                            Style="{StaticResource ImageButton}"
                            ToolTip="{lex:Loc ViewLogs}">
                            <materialDesign:PackIcon Kind="FileDocument" />
                        </Button>
                        <Button
                            Command="{Binding OpenSharedFolderCommand, Mode=OneTime}"
                            Style="{StaticResource ImageButton}"
                            ToolTip="{lex:Loc OpenSharedFolder}">
                            <materialDesign:PackIcon Kind="Dropbox" />
                        </Button>
                        <Button
                            Command="{Binding OpenSettingsFolderCommand, Mode=OneTime}"
                            Style="{StaticResource ImageButton}"
                            ToolTip="{lex:Loc OpenSettingsFolder}">
                            <materialDesign:PackIcon Kind="Folder" />
                        </Button>
                    </StackPanel>
                </DockPanel>
                <TextBlock
                    Grid.Row="1"
                    Grid.Column="0"
                    Text="{lex:Loc PreferredLanguage}" />
                <DockPanel Grid.Row="1" Grid.Column="1">
                    <ComboBox
                        DisplayMemberPath="DisplayName"
                        IsSynchronizedWithCurrentItem="True"
                        ItemsSource="{Binding AvailableTranslationLanguages, Mode=OneTime}"
                        SelectedValue="{Binding SelectedPreferredLanguage, Mode=TwoWay}"
                        SelectedValuePath="Code" />
                    <StackPanel
                        HorizontalAlignment="Right"
                        commonView:MarginSetter.Margin="{StaticResource CommonMargin}"
                        Orientation="Horizontal">
                        <Button
                            Command="{Binding ImportCommand, Mode=OneTime}"
                            Foreground="{StaticResource ImportButtonForeground}"
                            Style="{StaticResource ImageButton}"
                            ToolTip="{lex:Loc Import}">
                            <materialDesign:PackIcon Kind="Import" />
                        </Button>
                        <Button
                            Command="{Binding ExportCommand, Mode=OneTime}"
                            Foreground="{StaticResource ExportButtonForeground}"
                            Style="{StaticResource ImageButton}"
                            ToolTip="{lex:Loc Export}">
                            <materialDesign:PackIcon Kind="Export" />
                        </Button>
                    </StackPanel>
                </DockPanel>
                <TextBlock
                    Grid.Row="2"
                    Grid.Column="0"
                    Text="{lex:Loc TtsSpeaker}" />
                <DockPanel
                    Grid.Row="2"
                    Grid.Column="1"
                    commonView:MarginSetter.Margin="{StaticResource CommonMargin}"
                    commonView:MarginSetter.Orientation="Horizontal">
                    <ComboBox
                        DisplayMemberPath="Value"
                        IsSynchronizedWithCurrentItem="True"
                        ItemsSource="{Binding AvailableTtsSpeakers, Mode=OneTime}"
                        SelectedValue="{Binding TtsSpeaker, Mode=TwoWay}"
                        SelectedValuePath="Key" />
                    <ComboBox
                        HorizontalAlignment="Left"
                        DisplayMemberPath="Value"
                        IsSynchronizedWithCurrentItem="True"
                        ItemsSource="{Binding AvailableVoiceEmotions, Mode=OneTime}"
                        SelectedValue="{Binding TtsVoiceEmotion, Mode=TwoWay}"
                        SelectedValuePath="Key" />
                </DockPanel>
                <TextBlock
                    Grid.Row="3"
                    Grid.Column="0"
                    Text="{lex:Loc CardShowFrequency}" />
                <Slider
                    Grid.Row="3"
                    Grid.Column="1"
                    AutoToolTipPlacement="None"
                    IsSnapToTickEnabled="True"
                    Maximum="120"
                    Minimum="0.1"
                    TickPlacement="BottomRight"
                    Ticks="0.1,0.5,1,2,5,10,15,20,30,60,90,120"
                    ToolTip="{Binding Value, Converter={StaticResource DoubleToTextTimeSpanConverter}, ConverterParameter={x:Static commonConverters:DateInterval.Minutes}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                    Value="{Binding CardShowFrequency, Mode=TwoWay}" />
                <TextBlock
                    Grid.Row="4"
                    Grid.Column="0"
                    Text="{lex:Loc CardsToShowAtOnce}" />
                <numericUpDown:NumericUpDown
                    Grid.Row="4"
                    Grid.Column="1"
                    Value="{Binding CardsToShowAtOnce, Mode=TwoWay}" />
                <TextBlock
                    Grid.Row="5"
                    Grid.Column="0"
                    Text="{lex:Loc SyncBus}" />
                <ComboBox
                    Grid.Row="5"
                    Grid.Column="1"
                    IsSynchronizedWithCurrentItem="True"
                    ItemsSource="{Binding SyncBuses, Mode=OneTime}"
                    SelectedValue="{Binding SyncEngine, Mode=TwoWay}" />
                <TextBlock
                    Grid.Row="6"
                    Grid.Column="0"
                    Text="{lex:Loc MuteSounds}" />
                <CheckBox
                    Grid.Row="6"
                    Grid.Column="1"
                    IsChecked="{Binding MuteSounds, Mode=TwoWay}" />
                <TextBlock
                    Grid.Row="7"
                    Grid.Column="0"
                    Text="{lex:Loc SolveQwantCaptcha}" />
                <CheckBox
                    Grid.Row="7"
                    Grid.Column="1"
                    IsChecked="{Binding SolveQwantCaptcha, Mode=TwoWay}" />
                <TextBlock
                    Grid.Row="8"
                    Grid.Column="0"
                    Text="{lex:Loc ClassificationMinimalThreshold}" />
                <Slider
                    Grid.Row="8"
                    Grid.Column="1"
                    AutoToolTipPlacement="None"
                    AutoToolTipPrecision="2"
                    IsSnapToTickEnabled="True"
                    Maximum="100"
                    Minimum="11"
                    TickFrequency="1"
                    TickPlacement="BottomRight"
                    ToolTip="{Binding Value, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                    Value="{Binding ClassificationMinimalThreshold, Mode=TwoWay}" />
                <TextBlock
                    Grid.Row="9"
                    Grid.Column="0"
                    Text="{lex:Loc CardWindowOpacity}" />
                <Slider
                    Grid.Row="9"
                    Grid.Column="1"
                    AutoToolTipPlacement="None"
                    AutoToolTipPrecision="2"
                    IsSnapToTickEnabled="True"
                    Maximum="1"
                    Minimum="0.1"
                    TickFrequency="0.1"
                    TickPlacement="BottomRight"
                    ToolTip="{Binding Value, Converter={StaticResource DoubleToPercentageConverter}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                    Value="{Binding CardWindowOpacity, Mode=TwoWay}" />
                <settings:ApiKeysControl
                    Grid.Row="10"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    DataContext="{Binding ApiKeys, Mode=OneTime}" />
                <settings:CardProbabilitySettingsControl
                    Grid.Row="11"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    DataContext="{Binding CardProbabilitySettings, Mode=OneTime}" />
                <TextBlock
                    Grid.Row="12"
                    Grid.Column="0"
                    Text="{lex:Loc ProcessesBlacklist}" />
                <settings:ProcessesBlacklistControl
                    Grid.Row="12"
                    Grid.Column="1"
                    DataContext="{Binding ProcessBlacklistViewModel, Mode=OneTime}" />
                <StackPanel
                    Grid.Row="13"
                    Grid.Column="1"
                    HorizontalAlignment="Right"
                    commonView:MarginSetter.Margin="{StaticResource CommonMargin}"
                    Orientation="Horizontal">
                    <Button
                        Width="100"
                        Command="{Binding SaveCommand, Mode=OneTime}"
                        CommandParameter="{Binding SelectedItems, ElementName=DataGrid, Mode=OneWay}"
                        Content="{lex:Loc Save}"
                        IsDefault="True" />
                </StackPanel>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="IsEnabled" Value="True" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ProgressState, Mode=OneWay}" Value="Normal">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
            </Grid>
            <Border
                Grid.Row="1"
                Margin="0,5,0,0"
                BorderThickness="0">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Setter Property="Opacity" Value="0" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ProgressState, Mode=OneWay}" Value="Normal">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard Storyboard.TargetProperty="Opacity">
                                            <DoubleAnimation
                                                From="0"
                                                To="1"
                                                Duration="0:0:0:1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard Storyboard.TargetProperty="Opacity">
                                            <DoubleAnimation Duration="0:0:0:1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <!--  Progress Bar  -->
                <ProgressBar
                    Height="20"
                    HorizontalAlignment="Stretch"
                    Maximum="100"
                    Minimum="0"
                    ToolTip="{Binding ProgressDescription, Mode=OneWay}"
                    Value="{Binding Progress, Mode=OneWay}" />
            </Border>
        </Grid>
    </materialDesign:DialogHost>
</customWindow:AnimatedWindow>
