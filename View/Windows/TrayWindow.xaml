<commonView:BaseWindow
    x:Class="Mémoire.View.Windows.TrayWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:commonView="clr-namespace:Scar.Common.WPF.View.Core;assembly=Scar.Common.WPF.View.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:lex="http://wpflocalizeextension.codeplex.com"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:tb="http://www.hardcodet.net/taskbar"
    xmlns:viewModel="clr-namespace:Mémoire.ViewModel;assembly=Mémoire.ViewModel"
    xmlns:trayToolTip="clr-namespace:Mémoire.View.Controls.TrayToolTip;assembly=Mémoire.View.Controls.TrayToolTip"
    d:DataContext="{d:DesignInstance d:Type=viewModel:TrayViewModel}"
    lex:LocalizeDictionary.DesignCulture="en"
    lex:LocalizeDictionary.OutputMissingKeys="True"
    lex:ResxLocalizationProvider.DefaultAssembly="Mémoire.Resources"
    lex:ResxLocalizationProvider.DefaultDictionary="Texts"
    Icon="pack://application:,,/Mémoire.View;component/Images/IconAlt.ico"
    ShowInTaskbar="False"
    SizeToContent="WidthAndHeight"
    Visibility="Hidden"
    WindowState="Minimized"
    mc:Ignorable="d">
    <Grid>
        <tb:TaskbarIcon
            DoubleClickCommand="{Binding ShowDictionaryCommand, Mode=OneTime}"
            LeftClickCommand="{Binding ToggleActiveCommand, Mode=OneTime}"
            ToolTipText="{lex:Loc Mémoire.Resources:Texts:Title}">
            <b:Interaction.Triggers>
                <b:EventTrigger EventName="TrayToolTipClose">
                    <b:InvokeCommandAction Command="{Binding ToolTipCloseCommand, Mode=OneTime}" />
                </b:EventTrigger>
                <b:EventTrigger EventName="TrayToolTipOpen">
                    <b:InvokeCommandAction Command="{Binding ToolTipOpenCommand, Mode=OneTime}" />
                </b:EventTrigger>
            </b:Interaction.Triggers>
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <ContextMenu.Resources>
                        <Style TargetType="Image">
                            <Setter Property="Width" Value="16" />
                            <Setter Property="Height" Value="16" />
                        </Style>
                    </ContextMenu.Resources>
                    <MenuItem Command="{Binding ShowSettingsCommand, Mode=OneTime}" Header="{lex:Loc Mémoire.Resources:Texts:Settings}">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="Settings" />
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Command="{Binding AddTranslationCommand, Mode=OneTime}" Header="{lex:Loc Mémoire.Resources:Texts:AddTranslation}">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="PlusBox" />
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Command="{Binding ShowDictionaryCommand, Mode=OneTime}" Header="{lex:Loc Mémoire.Resources:Texts:Dictionary}">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="Dictionary" />
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem
                        Command="{Binding ToggleActiveCommand, Mode=OneTime}"
                        Header="{lex:Loc Mémoire.Resources:Texts:Deactivate}"
                        Visibility="{Binding IsActive, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="ToggleSwitchOff" />
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem
                        Command="{Binding ToggleActiveCommand, Mode=OneTime}"
                        Header="{lex:Loc Mémoire.Resources:Texts:Activate}"
                        Visibility="{Binding IsActive, Mode=OneWay, Converter={StaticResource ReverseBoolToVisibilityConverter}}">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="ToggleSwitch" />
                        </MenuItem.Icon>
                    </MenuItem>

                    <Separator />

                    <MenuItem Command="{Binding ViewLogsCommand, Mode=OneTime}" Header="{lex:Loc Mémoire.Resources:Texts:ViewLogs}">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="FileDocument" />
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Command="{Binding OpenSharedFolderCommand, Mode=OneTime}" Header="{lex:Loc Mémoire.Resources:Texts:OpenSharedFolder}">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="Dropbox" />
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Command="{Binding OpenSettingsFolderCommand, Mode=OneTime}" Header="{lex:Loc Mémoire.Resources:Texts:OpenSettingsFolder}">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="Folder" />
                        </MenuItem.Icon>
                    </MenuItem>

                    <Separator />

                    <MenuItem Command="{Binding ExitCommand, Mode=OneTime}" Header="{lex:Loc Mémoire.Resources:Texts:Exit}">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="ExitToApp" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
            <tb:TaskbarIcon.Style>
                <Style TargetType="tb:TaskbarIcon">
                    <Setter Property="IconSource" Value="pack://application:,,/Mémoire.View;component/Images/IconAlt.ico" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPaused, Mode=OneWay}" Value="True">
                            <Setter Property="IconSource" Value="pack://application:,,/Mémoire.View;component/Images/IconPaused.ico" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsActive, Mode=OneWay}" Value="False">
                            <Setter Property="IconSource" Value="pack://application:,,/Mémoire.View;component/Images/IconInactive.ico" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </tb:TaskbarIcon.Style>
            <tb:TaskbarIcon.TrayToolTip>
                <trayToolTip:TrayToolTipControl />
            </tb:TaskbarIcon.TrayToolTip>
        </tb:TaskbarIcon>
    </Grid>
</commonView:BaseWindow>
